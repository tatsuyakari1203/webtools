# Multi-stage build siêu tối ưu - Minimal size

# Stage 1: Dependencies
FROM oven/bun:1-alpine AS deps
WORKDIR /app

# Copy package files
COPY package.json bun.lock* ./

# Install dependencies
RUN bun install --frozen-lockfile

# Stage 2: Builder
FROM oven/bun:1-alpine AS builder
WORKDIR /app

# Copy dependencies từ stage trước
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Build ứng dụng với standalone output
RUN bun run build

# Stage 3: Minimal Runtime
FROM alpine:3.19 AS runner
WORKDIR /app

# Install chỉ Node.js runtime (không có npm, yarn)
RUN apk add --no-cache nodejs=~20 && \
    addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001

# Copy chỉ những file cần thiết từ standalone build
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
COPY --from=builder --chown=nextjs:nodejs /app/public ./public

# Switch to non-root user
USER nextjs

# Expose port
EXPOSE 5005

# Set environment variables
ENV NODE_ENV=production \
    PORT=5005 \
    HOSTNAME="0.0.0.0"

# Start the application
CMD ["node", "server.js"]